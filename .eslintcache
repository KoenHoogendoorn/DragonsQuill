[{"C:\\Users\\koen_\\React\\dnd-editor\\src\\index.js":"1","C:\\Users\\koen_\\React\\dnd-editor\\src\\App.js":"2","C:\\Users\\koen_\\React\\dnd-editor\\src\\reportWebVitals.js":"3","C:\\Users\\koen_\\React\\dnd-editor\\src\\containers\\AdventureWrapper\\AdventureWrapper.js":"4","C:\\Users\\koen_\\React\\dnd-editor\\src\\containers\\AdventureWrapper\\ContentWrapperLeft\\ContentWrapperLeft.js":"5","C:\\Users\\koen_\\React\\dnd-editor\\src\\containers\\AdventureWrapper\\ContentWrapperRight\\ContentWrapperRight.js":"6","C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\SearchBar\\SearchBar.js":"7","C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\Tab\\Tab.js":"8","C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\Inputbar\\Inputbar.js":"9","C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\Button\\Button.js":"10","C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\NPC\\NPC.js":"11","C:\\Users\\koen_\\React\\dnd-editor\\src\\store\\reducers\\contentData.js":"12","C:\\Users\\koen_\\React\\dnd-editor\\src\\store\\reducers\\activeTab.js":"13","C:\\Users\\koen_\\React\\dnd-editor\\src\\store\\actions\\activeTab.js":"14","C:\\Users\\koen_\\React\\dnd-editor\\src\\store\\actions\\actionsIndex.js":"15","C:\\Users\\koen_\\React\\dnd-editor\\src\\shared\\utility.js":"16","C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\Chapter\\Chapter.js":"17","C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\Card\\Chevron\\Chevron.js":"18","C:\\Users\\koen_\\React\\dnd-editor\\src\\blots\\dndmention.js":"19","C:\\Users\\koen_\\React\\dnd-editor\\src\\store\\reducers\\activeChapter.js":"20","C:\\Users\\koen_\\React\\dnd-editor\\src\\store\\actions\\activeChapter.js":"21","C:\\Users\\koen_\\React\\dnd-editor\\src\\containers\\AdventureWrapper\\ContentWrapperRight\\EditorToolbar\\EditorToolbar.js":"22","C:\\Users\\koen_\\React\\dnd-editor\\src\\containers\\AdventureWrapper\\ContentWrapperRight\\EditorHeader\\EditorHeader.js":"23","C:\\Users\\koen_\\React\\dnd-editor\\src\\store\\actions\\contentData.js":"24","C:\\Users\\koen_\\React\\dnd-editor\\src\\containers\\AdventureWrapper\\ContentWrapperLeft\\SearchResults\\SearchResults.js":"25","C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\Card\\CardToolbar\\CardToolbar.js":"26","C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\Card\\CardBody\\CardBody.js":"27","C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\Card\\CardBackground\\CardBackground.js":"28","C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\NPC\\NPCEditor\\NPCEditor.js":"29","C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\NPC\\NPCEditor\\NPCEditorToolbar\\NPCEditorToolbar.js":"30","C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\Card\\CardHeaderContainer\\CardHeaderContainer.js":"31"},{"size":1361,"mtime":1611936119286,"results":"32","hashOfConfig":"33"},{"size":220,"mtime":1610099464330,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"33"},{"size":457,"mtime":1612176446330,"results":"36","hashOfConfig":"33"},{"size":7805,"mtime":1612197729765,"results":"37","hashOfConfig":"33"},{"size":8687,"mtime":1612186483085,"results":"38","hashOfConfig":"33"},{"size":135,"mtime":1610125467708,"results":"39","hashOfConfig":"33"},{"size":594,"mtime":1610373722050,"results":"40","hashOfConfig":"33"},{"size":363,"mtime":1611408575226,"results":"41","hashOfConfig":"33"},{"size":1013,"mtime":1612273505460,"results":"42","hashOfConfig":"33"},{"size":2406,"mtime":1612190187696,"results":"43","hashOfConfig":"33"},{"size":9867,"mtime":1612257633794,"results":"44","hashOfConfig":"33"},{"size":503,"mtime":1610361017159,"results":"45","hashOfConfig":"33"},{"size":122,"mtime":1610359348116,"results":"46","hashOfConfig":"33"},{"size":215,"mtime":1612027108583,"results":"47","hashOfConfig":"33"},{"size":132,"mtime":1610361001948,"results":"48","hashOfConfig":"33"},{"size":742,"mtime":1611912695078,"results":"49","hashOfConfig":"33"},{"size":159,"mtime":1611314497036,"results":"50","hashOfConfig":"33"},{"size":1917,"mtime":1611230962405,"results":"51","hashOfConfig":"33"},{"size":400,"mtime":1611073173686,"results":"52","hashOfConfig":"33"},{"size":118,"mtime":1611073283770,"results":"53","hashOfConfig":"33"},{"size":1114,"mtime":1611662627297,"results":"54","hashOfConfig":"33"},{"size":863,"mtime":1611658751726,"results":"55","hashOfConfig":"33"},{"size":608,"mtime":1612027091405,"results":"56","hashOfConfig":"33"},{"size":191,"mtime":1611406871550,"results":"57","hashOfConfig":"33"},{"size":565,"mtime":1611917508043,"results":"58","hashOfConfig":"33"},{"size":1012,"mtime":1611912319438,"results":"59","hashOfConfig":"33"},{"size":1087,"mtime":1612199019436,"results":"60","hashOfConfig":"33"},{"size":5553,"mtime":1612196042945,"results":"61","hashOfConfig":"33"},{"size":1125,"mtime":1612088793782,"results":"62","hashOfConfig":"33"},{"size":1585,"mtime":1612002823214,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"wtary0",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},"C:\\Users\\koen_\\React\\dnd-editor\\src\\index.js",[],["132","133"],"C:\\Users\\koen_\\React\\dnd-editor\\src\\App.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\reportWebVitals.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\containers\\AdventureWrapper\\AdventureWrapper.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\containers\\AdventureWrapper\\ContentWrapperLeft\\ContentWrapperLeft.js",["134"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport classes1 from \"../AdventureWrapper.module.css\";\r\nimport classes2 from \"./ContentWrapperLeft.module.css\";\r\n\r\nimport Tab from \"../../../components/Tab/Tab\";\r\nimport Inputbar from \"../../../components/Inputbar/Inputbar\";\r\nimport Button from \"../../../components/Button/Button\";\r\nimport Chapter from \"../../../components/Chapter/Chapter\";\r\nimport NPC from \"../../../components/NPC/NPC\";\r\nimport NPCEditor from \"../../../components/NPC/NPCEditor/NPCEditor\";\r\n\r\nimport * as actions from \"../../../store/actions/actionsIndex\";\r\n\r\nconst classes = { ...classes1, ...classes2 };\r\n\r\nconst ContentWrapperLeft = (props) => {\r\n  const initialItemState = {\r\n    id: \"\",\r\n    key: \"\",\r\n    value: \"\",\r\n    description: \"\",\r\n    content: null,\r\n    open: false\r\n  };\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [currentItem, setCurrentItem] = useState(initialItemState);\r\n  // const [addingChapter, setAddingChapter] = useState(false);\r\n  const [addingNPC, setAddingNPC] = useState(false);\r\n  const [addingMonster, setAddingMonster] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.sortContentHandler();\r\n  }, []);\r\n\r\n  const editSearchTerm = (input) => {\r\n    setSearchTerm(input.target.value);\r\n  };\r\n\r\n  const newContentButtonHandler = () => {\r\n    switch (props.activeTab) {\r\n      // case \"Chapters\":\r\n      //   return setAddingChapter(true);\r\n      case \"NPCs\":\r\n        return setAddingNPC(true);\r\n      case \"Monsters\":\r\n        return setAddingMonster(true);\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const cancelEditingExistingCard = () => {\r\n    setCurrentItem(initialItemState);\r\n    switch (props.activeTab) {\r\n      case \"NPCs\":\r\n        return setAddingNPC(false);\r\n      case \"Monsters\":\r\n        return setAddingMonster(false);\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const activeNewContentCardHandler = () => {\r\n    if ((addingNPC || addingMonster) && currentItem === null) {\r\n      return (\r\n        <NPCEditor removeNewNNPCCard={() => cancelEditingExistingCard()} />\r\n      );\r\n    } else if (\r\n      (addingNPC || addingMonster) &&\r\n      typeof currentItem === \"object\"\r\n    ) {\r\n      return (\r\n        <NPCEditor\r\n          id={currentItem.id}\r\n          key={currentItem.id}\r\n          value={currentItem.value}\r\n          description={currentItem.description}\r\n          content={currentItem.content}\r\n          open={currentItem.open}\r\n          removeNewNNPCCard={() => cancelEditingExistingCard()}\r\n        />\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const editItemHandler = (item) => {\r\n    // newContentButtonHandler();\r\n    item.open = false;\r\n    setCurrentItem(item);\r\n    switch (props.activeTab) {\r\n      case \"NPCs\":\r\n        return setAddingNPC(true);\r\n      case \"Monsters\":\r\n        return setAddingMonster(true);\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const clickTabHandler = (type) => {\r\n    cancelEditingExistingCard();\r\n    props.closeCardsHandler(type);\r\n    props.activeTabHandler(type);\r\n  };\r\n\r\n  const activeContentHandler = () => {\r\n    const chaptersList = () => {\r\n      return props.chapters\r\n        .filter((chapter) =>\r\n          chapter.name.toLowerCase().startsWith(searchTerm.toLowerCase())\r\n        )\r\n        .map((chapter) => {\r\n          return (\r\n            <Chapter key={chapter.id} id={chapter.id} name={chapter.name} />\r\n          );\r\n        });\r\n    };\r\n\r\n    const npcsList = () => {\r\n      //if an item is open, but dissapears because of another search term,\r\n      //the open property is set to false\r\n      props.npcs.forEach((npc) => {\r\n        if (!npc.value.toLowerCase().startsWith(searchTerm.toLowerCase())) {\r\n          npc.open = false;\r\n        }\r\n      });\r\n      return props.npcs\r\n        .filter(\r\n          (npc) =>\r\n            npc.value.toLowerCase().startsWith(searchTerm.toLowerCase()) &&\r\n            npc.id !== currentItem.id\r\n        )\r\n        .map((npc) => {\r\n          return !npc.disabled ? (\r\n            <NPC\r\n              key={npc.id}\r\n              id={npc.id}\r\n              value={npc.value}\r\n              description={npc.description}\r\n              content={npc.content}\r\n              open={npc.open}\r\n              onEditClick={() => editItemHandler(npc)}\r\n            />\r\n          ) : null;\r\n        });\r\n    };\r\n\r\n    const monstersList = () => {\r\n      //if an item is open, but dissapears because of another search term,\r\n      //the open property is set to false\r\n      props.monsters.forEach((monster) => {\r\n        if (!monster.value.toLowerCase().startsWith(searchTerm.toLowerCase())) {\r\n          monster.open = false;\r\n        }\r\n      });\r\n      return props.monsters\r\n        .filter(\r\n          (monster) =>\r\n            monster.value.toLowerCase().startsWith(searchTerm.toLowerCase()) &&\r\n            monster.id !== currentItem.id\r\n        )\r\n        .map((monster) => {\r\n          return !monster.disabled ? (\r\n            <NPC\r\n              key={monster.id}\r\n              id={monster.id}\r\n              value={monster.value}\r\n              description={monster.description}\r\n              content={monster.content}\r\n              open={monster.open}\r\n              onEditClick={() => editItemHandler(monster)}\r\n            />\r\n          ) : null;\r\n        });\r\n    };\r\n\r\n    switch (props.activeTab) {\r\n      case \"Chapters\":\r\n        return chaptersList();\r\n      case \"NPCs\":\r\n        return npcsList();\r\n      case \"Monsters\":\r\n        return monstersList();\r\n      default:\r\n        return chaptersList();\r\n    }\r\n  };\r\n\r\n  let buttonText = \"Add \" + props.activeTab.slice(0, -1);\r\n\r\n  return (\r\n    <div className={`${classes.ContentWrapper} ${classes.WrapperLeft}`}>\r\n      <h1>Adventure Title</h1>\r\n      <section className={classes.Tabs}>\r\n        <Tab\r\n          contentType={\"Chapters\"}\r\n          clicked={() => props.activeTabHandler(\"Chapters\")}\r\n        >\r\n          <i className=\"fas fa-bookmark\"></i>\r\n          Chapters\r\n        </Tab>\r\n        <Tab contentType={\"NPCs\"} clicked={() => clickTabHandler(\"NPCs\")}>\r\n          <i className=\"fas fa-user\"></i>\r\n          NPC's\r\n        </Tab>\r\n        <Tab\r\n          contentType={\"Monsters\"}\r\n          clicked={() => clickTabHandler(\"Monsters\")}\r\n        >\r\n          <i className=\"fas fa-dragon\"></i>\r\n          Monsters\r\n        </Tab>\r\n        <Tab>\r\n          <i className=\"fas fa-map-marked-alt\"></i>\r\n          Locations\r\n        </Tab>\r\n      </section>\r\n      <hr className={classes.TabDivider} />\r\n      <section className={classes.CardToolbar}>\r\n        <Inputbar\r\n          type=\"search\"\r\n          placeholder={`Search for ${props.activeTab}...`}\r\n          val={searchTerm}\r\n          changed={editSearchTerm}\r\n        />\r\n        <Button\r\n          size=\"big\"\r\n          priority=\"primary\"\r\n          clicked={() => newContentButtonHandler()}\r\n        >\r\n          <i className=\"fas fa-plus\"></i>\r\n          {buttonText}\r\n        </Button>\r\n      </section>\r\n      {activeNewContentCardHandler()}\r\n      <section className={classes.CardsContainer}>\r\n        {activeContentHandler()}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    npcs: state.contentData.npcs,\r\n    monsters: state.contentData.monsters,\r\n    chapters: state.contentData.chapters,\r\n    activeTab: state.activeTab.activeTab\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    activeTabHandler: (contentType) => dispatch(actions.activeTab(contentType)),\r\n    sortContentHandler: () => dispatch(actions.sortContent()),\r\n    closeCardsHandler: (newActiveTab) =>\r\n      dispatch(actions.closeCards(newActiveTab))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentWrapperLeft);\r\n","C:\\Users\\koen_\\React\\dnd-editor\\src\\containers\\AdventureWrapper\\ContentWrapperRight\\ContentWrapperRight.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\SearchBar\\SearchBar.js",[],["135","136"],"C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\Tab\\Tab.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\Inputbar\\Inputbar.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\Button\\Button.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\NPC\\NPC.js",["137"],"import React, { useEffect } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as actions from \"../../store/actions/actionsIndex\";\r\n\r\nimport cardBackgroundClasses from \"../Card/CardBackground/CardBackground.module.css\";\r\nimport NPCclasses from \"./NPC.module.css\";\r\n\r\nimport CardBackground from \"../Card/CardBackground/CardBackground\";\r\nimport CardBody from \"../Card/CardBody/CardBody\";\r\nimport CardHeaderContainer from \"../Card/CardHeaderContainer/CardHeaderContainer\";\r\nimport CardToolbar from \"../Card/CardToolbar/CardToolbar\";\r\nimport Chevron from \"../Card/Chevron/Chevron\";\r\n\r\nconst NPC = (props) => {\r\n  const classes = { ...cardBackgroundClasses, ...NPCclasses };\r\n\r\n  let chevronClass = classes.CardClosedIcon;\r\n  let thisItem = null;\r\n\r\n  switch (props.id.substring(0, 2)) {\r\n    case \"np\":\r\n      thisItem = props.npcs.find((npc) => npc.id === props.id);\r\n      if (props.activeTab !== \"NPCs\") {\r\n        thisItem.open = false;\r\n      }\r\n      break;\r\n    case \"mo\":\r\n      thisItem = props.monsters.find((monster) => monster.id === props.id);\r\n      if (props.activeTab !== \"Monsters\") {\r\n        thisItem.open = false;\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  if (thisItem.open) {\r\n    chevronClass = classes.CardOpenIcon;\r\n  } else {\r\n    chevronClass = classes.CardClosedIcon;\r\n  }\r\n\r\n  return (\r\n    <CardBackground id={props.id}>\r\n      <div id={props.id}>\r\n        <CardHeaderContainer id={props.id}>\r\n          <div className={classes.CardHeader}>\r\n            <h4>{props.value}</h4>\r\n            <p className={classes.CardSubtitle}>{props.description}</p>\r\n          </div>\r\n          <Chevron class={chevronClass} />\r\n        </CardHeaderContainer>\r\n        <CardBody id={props.id}>\r\n          <div dangerouslySetInnerHTML={{ __html: props.content }}></div>\r\n          <CardToolbar\r\n            onDelete={() => props.removeNPCHandler(props.id)}\r\n            onEdit={props.onEditClick}\r\n          />\r\n        </CardBody>\r\n      </div>\r\n    </CardBackground>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    npcs: state.contentData.npcs,\r\n    monsters: state.contentData.monsters,\r\n    activeTab: state.activeTab.activeTab\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    removeNPCHandler: (id) => dispatch(actions.removeNPC(id))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NPC);\r\n","C:\\Users\\koen_\\React\\dnd-editor\\src\\store\\reducers\\contentData.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\store\\reducers\\activeTab.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\store\\actions\\activeTab.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\store\\actions\\actionsIndex.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\shared\\utility.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\Chapter\\Chapter.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\Card\\Chevron\\Chevron.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\blots\\dndmention.js",["138"],"C:\\Users\\koen_\\React\\dnd-editor\\src\\store\\reducers\\activeChapter.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\store\\actions\\activeChapter.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\containers\\AdventureWrapper\\ContentWrapperRight\\EditorToolbar\\EditorToolbar.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\containers\\AdventureWrapper\\ContentWrapperRight\\EditorHeader\\EditorHeader.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\store\\actions\\contentData.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\containers\\AdventureWrapper\\ContentWrapperLeft\\SearchResults\\SearchResults.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\Card\\CardToolbar\\CardToolbar.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\Card\\CardBody\\CardBody.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\Card\\CardBackground\\CardBackground.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\NPC\\NPCEditor\\NPCEditor.js",["139"],"import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport ReactQuill from \"react-quill\";\r\nimport * as actions from \"../../../store/actions/actionsIndex\";\r\n\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"./NPCEditor.css\";\r\nimport \"../../../shared/quillEditorOverall.css\";\r\n\r\nimport CardBackground from \"../../Card/CardBackground/CardBackground\";\r\nimport NPCEditorToolbar from \"./NPCEditorToolbar/NPCEditorToolbar\";\r\n\r\nclass NPCEditor extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      key: \"\",\r\n      value: \"\",\r\n      description: \"\",\r\n      content: null,\r\n      open: false,\r\n      editingExistingNPC: false\r\n    };\r\n    this.quillRef = null; // Quill instance\r\n    this.reactQuillRef = null; // ReactQuill component\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Fill state with clicked item props\r\n    if (this.props.id !== \"\") {\r\n      this.setState((state, props) => ({\r\n        id: props.id,\r\n        key: props.id,\r\n        value: props.value,\r\n        description: props.description,\r\n        content: props.content,\r\n        open: false,\r\n        editingExistingNPC: true\r\n      }));\r\n    }\r\n    //Creates and sets new id and key\r\n    if (!this.state.editingExistingNPC) {\r\n      const NPCs = this.props.npcs;\r\n      const Monsters = this.props.npcs;\r\n      let idNumbers = null;\r\n      let currentIdPrefix = null;\r\n      switch (this.props.activeTab) {\r\n        case \"NPCs\":\r\n          idNumbers = NPCs.map((npc) => npc.id).map((id) => {\r\n            return Number(id.substring(2));\r\n          });\r\n          currentIdPrefix = \"np\";\r\n          break;\r\n        case \"Monsters\":\r\n          idNumbers = Monsters.map((monster) => monster.id).map((id) => {\r\n            return Number(id.substring(2));\r\n          });\r\n          currentIdPrefix = \"mo\";\r\n        default:\r\n          break;\r\n      }\r\n\r\n      const generatedIdNumber = Math.max(...idNumbers) + 1; //gets Id with highest number at the end and add 1\r\n      const generatedId = currentIdPrefix.concat(generatedIdNumber.toString());\r\n\r\n      this.setState({ id: generatedId, key: generatedId });\r\n    }\r\n\r\n    this.attachQuillRefs();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.attachQuillRefs();\r\n  }\r\n\r\n  attachQuillRefs = () => {\r\n    if (typeof this.reactQuillRef.getEditor !== \"function\") return;\r\n    this.quillRef = this.reactQuillRef.getEditor();\r\n  };\r\n\r\n  handleNameChange = (event) => {\r\n    this.setState({ value: event.target.value });\r\n  };\r\n\r\n  handleDescriptionChange = (event) => {\r\n    this.setState({ description: event.target.value });\r\n  };\r\n\r\n  handleContentChange = () => {\r\n    const html = this.quillRef.root.innerHTML;\r\n    this.setState({ content: html });\r\n  };\r\n\r\n  handleDelete = () => {\r\n    this.setState({\r\n      id: \"\",\r\n      key: \"\",\r\n      value: \"\",\r\n      description: \"\",\r\n      content: null,\r\n      open: false,\r\n      editingExistingNPC: false\r\n    });\r\n    this.props.removeNewNNPCCard();\r\n  };\r\n\r\n  handleSave = () => {\r\n    if (this.state.editingExistingNPC) {\r\n      //remove old copied item\r\n      this.props.removeNPCHandler(this.props.id);\r\n    }\r\n    this.props.addNPCHandler({\r\n      id: this.state.id,\r\n      key: this.state.id,\r\n      value: this.state.value,\r\n      description: this.state.description,\r\n      content: this.state.content,\r\n      open: false\r\n    });\r\n\r\n    this.handleDelete();\r\n    this.props.sortContentHandler();\r\n  };\r\n\r\n  modules = {\r\n    toolbar: {\r\n      container: \".toolbarNPC\"\r\n    }\r\n  };\r\n\r\n  formats = [\r\n    \"header\",\r\n    \"bold\",\r\n    \"italic\",\r\n    \"underline\",\r\n    \"strike\",\r\n    \"blockquote\",\r\n    \"list\",\r\n    \"bullet\",\r\n    \"indent\",\r\n    \"link\",\r\n    \"image\"\r\n  ];\r\n\r\n  render() {\r\n    return (\r\n      <CardBackground id=\"newCard\">\r\n        <div className=\"NPCEditor\">\r\n          <section>\r\n            {/*className={classes.CardHeaderContainer} */}\r\n            <div>\r\n              <input\r\n                className=\"NPCEditorName\"\r\n                value={this.state.value}\r\n                onChange={this.handleNameChange}\r\n                placeholder=\"Character name...\"\r\n              ></input>\r\n              <input\r\n                className=\"NPCEditorDescription\"\r\n                value={this.state.description}\r\n                onChange={this.handleDescriptionChange}\r\n                placeholder=\"Species &amp; gender, Alignment......\"\r\n              ></input>\r\n            </div>\r\n          </section>\r\n          <ReactQuill\r\n            theme=\"snow\"\r\n            value={this.state.content}\r\n            onChange={this.handleContentChange || \"\"}\r\n            modules={this.modules}\r\n            placeholder=\"Character description...\"\r\n            ref={(el) => {\r\n              this.reactQuillRef = el;\r\n            }}\r\n          />\r\n          <NPCEditorToolbar\r\n            onDelete={() => this.handleDelete()}\r\n            onSave={() => this.handleSave()}\r\n            editingExistingNPC={this.state.editingExistingNPC}\r\n          />\r\n        </div>\r\n      </CardBackground>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    npcs: state.contentData.npcs,\r\n    monsters: state.contentData.monsters,\r\n    activeTab: state.activeTab.activeTab\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    removeNPCHandler: (id) => dispatch(actions.removeNPC(id)),\r\n    addNPCHandler: (npc) => dispatch(actions.addNPC(npc)),\r\n    sortContentHandler: (id) => dispatch(actions.sortContent(id))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NPCEditor);\r\n","C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\NPC\\NPCEditor\\NPCEditorToolbar\\NPCEditorToolbar.js",[],"C:\\Users\\koen_\\React\\dnd-editor\\src\\components\\Card\\CardHeaderContainer\\CardHeaderContainer.js",[],["140","141"],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":36,"column":6,"nodeType":"148","endLine":36,"endColumn":8,"suggestions":"149"},{"ruleId":"142","replacedBy":"150"},{"ruleId":"144","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"156","line":14,"column":11,"nodeType":"154","messageId":"155","endLine":14,"endColumn":14},{"ruleId":"157","severity":1,"message":"158","line":61,"column":9,"nodeType":"159","messageId":"160","endLine":62,"endColumn":17},{"ruleId":"142","replacedBy":"161"},{"ruleId":"144","replacedBy":"162"},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["165"],["163"],["164"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'prp' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default",["163"],["164"],"no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},"Update the dependencies array to be: [props]",{"range":"168","text":"169"},[1219,1221],"[props]"]